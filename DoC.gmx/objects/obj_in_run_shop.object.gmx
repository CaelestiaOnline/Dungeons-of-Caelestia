<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_altar1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_hindernis_interaction</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
scr_initialise_obstacle_main(-1, false, -1);
scr_init_interaction();

sprite = spr_altar_circle1;

//Pentagramm
ability_hitmark = instance_create(x, y + 48, obj_ability_hitmark);
ability_hitmark.sprite_index = sprite;
ability_hitmark.alarm[0] = -2;
ability_hitmark.depth = 200;

//Stats
prize_mult = 0.5;//round(random_range(3, 8)*100)/100;

temp_item_index = -1;
temp_item_type = -1;
temp_item_rarity = -1;
temp_item_count = -1;

temp_item_type[0] = "prim";
temp_item_rarity[0] = scr_get_item_rarity_level();
temp_item_index[0] = scr_get_random_valid_rarity_type_item(temp_item_type[0], temp_item_rarity[0]);
temp_item_count[0] = irandom_range(1, item[temp_item_index[0], 4]);

temp_item_type[1] = choose("sec", "mag");
temp_item_rarity[1] = scr_get_item_rarity_level();
temp_item_index[1] = scr_get_random_valid_rarity_type_item(temp_item_type[1], temp_item_rarity[1]);
temp_item_count[1] = irandom_range(1, item[temp_item_index[1], 4]);

temp_item_type[2] = choose("item", "pickup");
temp_item_rarity[2] = scr_get_item_rarity_level();
temp_item_index[2] = scr_get_random_valid_rarity_type_item(temp_item_type[2], temp_item_rarity[2]);
temp_item_count[2] = irandom_range(1, item[temp_item_index[2], 4]);

temp_item_type[3] = "pickup";
temp_item_rarity[3] = scr_get_item_rarity_level();
temp_item_index[3] = scr_get_random_valid_rarity_type_item(temp_item_type[3], temp_item_rarity[3]);
temp_item_count[3] = irandom_range(1, item[temp_item_index[3], 4]);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Interaction
scr_interaction("Shop betreten?", "Shop");

if(confirmed) {
    scr_enter_playing_menu(obj_in_run_shop_menu);
    confirmed = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
