<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>-1</persistent>
  <parentName>obj_fade</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variablen
goal = "";

left = 0;
right = 0;

xfactor = 20;

stagetwo = false;

colour = global.co_blue_gray_800;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Slide-Effekt

draw_set_colour(colour);
draw_set_alpha(1);

//Ecken
var x1, x2, y1, y2;

x1 = 0 + left;
x2 = 0 + right;
y1 = 0;
y2 = 0 +  display_get_gui_height();

//Bewegung (Dynamischer Geschwindigkeits An- /Abstieg der Ãœberblendung)
right += xfactor;

if(right &lt; display_get_gui_width()/2 &amp;&amp; stagetwo == false) {
    xfactor += 2;
}

left += xfactor * stagetwo;

if(left &gt;  display_get_gui_width()/2 &amp;&amp; stagetwo == true) {
    if(xfactor &gt; 10) {
    xfactor -= 2;
    }
}


draw_rectangle(x1,y1,x2,y2,0);

if((right &gt;  display_get_gui_width() + 50) &amp;&amp; (stagetwo == false)) {
    stagetwo = true;
    room_goto(goal);
} 

if(left &gt;  display_get_gui_width() + 50) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
