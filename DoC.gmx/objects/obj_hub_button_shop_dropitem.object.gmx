<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variablen

button_item = -1;
button_count = 0;

width = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Drag &amp; Drop System
var click = admin.left_click_pressed;
var right_click = admin.right_click_pressed;
width = sprite_get_width(spr_inv_border)/2;

draw_set_colour(c_white);
draw_set_alpha(1);

if(abs(mouse.x - x) &lt; width &amp;&amp; (abs(mouse.y - y) &lt; width)) {
    //Item-Stats
    if(button_item != -1) {
        inventory.item_stats_title = item[button_item, 0];
        inventory.item_stats_desc = item[button_item, 1];
    }
    //Rechteck bei Hovern
    draw_set_alpha(0.5);
    draw_rectangle(
        x - (width-2),
        y - (width-2),
        x + (width-2),
        y + (width-2),
        0
    );
    draw_set_alpha(1);
    if(click &amp;&amp; !right_click) {
        //Wenn der Button ein Item enth√§lt
        if(button_item == -1) {
            button_item = mouse_ind_hub.mouse_item;
            button_count = mouse_ind_hub.mouse_count;
        
            mouse_ind_hub.mouse_item = -1;
            mouse_ind_hub.mouse_count = 0;
            
            scr_inventory_drop_item_place_count(button_item, -1, -1, button_count);
            
            button_item = -1;
            button_count = 0;
        } else {
        }
    }

}

draw_sprite(spr_inv_border_2, 0, x, y);
draw_sprite(spr_inv_border_drop, 0, x, y);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Sprite + Anzahl
if(button_item != -1) {
    draw_sprite(spr_items, button_item, x, y);
}

//Anzahl der Item in den Slots
scr_draw_count(button_count, x, y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
