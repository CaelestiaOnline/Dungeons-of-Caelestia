<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Menu Koordinaten
hub_menu_x1 = 0;
hub_menu_x2 = display_get_gui_width();

hub_menu_y1 = 0;
hub_menu_y2 = 64;





</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Item Index
global.shop_item_index = 0;
global.shop_type_index = "prim";

scr_draw_item_stats(global.shop_item_index);

scr_read_items();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Button Koordinaten
//Exit_button
exit_button_x = hub_menu_x2 - 8*1 - 24 - 48*0;
exit_button_y = hub_menu_y1 + 32;
exit_button = instance_create(exit_button_x, exit_button_y, obj_hub_button_exit);

//Shop Button DEBUG
max_slots = 15;
var hwidth = array_height_2d(item) div max_slots;

for(var j = 0; j &lt; max_slots; j++) {
for(var i = 0; i &lt; max_slots; i++) {
    shop_button_x[i, j] = 64 + 64*i;
    shop_button_y[i, j] = hub_menu_y1 + 128 + 64*j;
    shop_button[i, j] = -1;
}
}

///Item Stats Koordinaten
item_stats_menu_x1 = shop_button_x[max_slots-1, max_slots-1] + 64;
item_stats_menu_x2 = display_get_gui_width() - 64;

item_stats_menu_y1 = shop_button_y[0, 0];
item_stats_menu_y2 = display_get_gui_height() - 64;

//Shop Button DropItem
shop_button_dropitem_x = item_stats_menu_x1 + 24 + 32;
shop_button_dropitem_y = item_stats_menu_y1 + 700;
shop_button_dropitem = instance_create(shop_button_dropitem_x, shop_button_dropitem_y, obj_hub_button_shop_dropitem);

//Shop Button BuyItem
shop_button_buyitem_x = item_stats_menu_x1 + 48 + 32;
shop_button_buyitem_y = item_stats_menu_y1 + 500;
shop_button_buyitem = instance_create(shop_button_buyitem_x, shop_button_buyitem_y, obj_hub_button_shop_buyitem);

//Shop Button GetType
for(var i = 0; i &lt; 5; i++) {

shop_button_gettype_x[i] = item_stats_menu_x1 + 64 + (i*96);
shop_button_gettype_y[i] = item_stats_menu_y2 - 64;
shop_button_gettype[i] = instance_create(shop_button_gettype_x[i], shop_button_gettype_y[i], obj_hub_button_shop_gettype);

var temp_item_type = "prim";

switch(i) {
    case 0:
        temp_item_type = "prim";
        break;
    case 1:
        temp_item_type = "sec";
        break;
    case 2:
        temp_item_type = "mag";
        break;
    case 3:
        temp_item_type = "item";
        break;
    case 4:
        temp_item_type = "pickup";
        break;
}
shop_button_gettype[i].button_item_type = temp_item_type;
}

scr_update_shop_button();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Kontrolltasten
if(admin.pause_menu_key_pressed) scr_leave_hub_menu();


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Men√ºleiste
draw_set_colour(inv_hud.colour_trans);

draw_rectangle(
    hub_menu_x1,
    hub_menu_y1,
    hub_menu_x2,
    hub_menu_y2,
    0
);
draw_set_alpha(1);

draw_set_valign(fa_middle);
draw_set_halign(fa_left);
draw_set_colour(inv_hud.colour_font);
draw_set_font(fnt_inv_heading_prim);
draw_set_alpha(1);
draw_text(
    hub_menu_x1 + 16,
    hub_menu_y2 - 32,
    "HUB SHOP MENU"
);
draw_set_valign(fa_top);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hintergrund

draw_set_alpha(1);
draw_set_colour(global.co_blue_gray_1000);

draw_roundrect(
    item_stats_menu_x1,
    item_stats_menu_y1,
    item_stats_menu_x2,
    item_stats_menu_y2,
    0
);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Item Stats

draw_set_alpha(1);

draw_set_colour(inv_hud.item_stats_heading_colour);
draw_set_font(fnt_item_stats_title);

draw_text(
    item_stats_menu_x1 + 32,
    item_stats_menu_y1 + 32,
    item[global.shop_item_index, 0]
    );
    
draw_set_font(fnt_inv_stats);
draw_set_colour(c_white);
draw_text_ext(
    item_stats_menu_x1 + 32,
    item_stats_menu_y1 + 32 + 32,
    item[global.shop_item_index, 1],
    20,
    300
    );
    
for(var i = 0; i &lt; array_length_1d(inv_hud.item_stats_heading_array); i++) {
    if(inv_hud.item_stats_heading_array[i] != 0) {
    draw_text(
    item_stats_menu_x1 + 32,
    item_stats_menu_y1 + 32*3 + 48 + 32*i,
    inv_hud.item_stats_heading_array[i]
    );
    }
}

for(var i = 0; i &lt; array_length_1d(inv_hud.item_stats_array); i++) {
    if(inv_hud.item_stats_heading_array[i] != 0) {
    if(inv_hud.item_stats_array[i] == "" || inv_hud.item_stats_array[i] == 0) {
        inv_hud.item_stats_array[i] = "-/-";
    }
    draw_text_ext(
    item_stats_menu_x1 + 200,
    item_stats_menu_y1 + 32*3 + 48 + 32*i,
    inv_hud.item_stats_array[i],
    20,
    180
    );
    }
}
    
var item_status;
if(global.items_unlocked[global.shop_item_index]) {
    item_status = "ITEM ERFOLGREICH ERSCHAFFEN";
    draw_set_colour(c_green);
} else {
    item_status = "ITEMSTATUS UNBEKANNT";
    draw_set_colour(c_red);
}

draw_text(
    shop_button_buyitem_x + 48 + 32,
    shop_button_buyitem_y + 16,
    item_status
);

var item_status;
if(global.items_found[global.shop_item_index] &gt;= 1) {
    item_status = "SUCESSFULLY RESEARCHED";
    draw_set_colour(c_green);
} else {
    item_status = "RESEARCH PROGRESS";
    draw_set_colour(c_red);
}

draw_text(
    shop_button_buyitem_x + 48 + 32,
    shop_button_buyitem_y - 16,
    item_status + " [ " + string(global.items_found[global.shop_item_index]*100) + "% ]"
);

draw_set_colour(c_yellow);
draw_text(
    shop_button_buyitem_x + 48 + 32,
    shop_button_buyitem_y - 16 - 32,
    "HUB MONEY: " + string(progress.hub_money) + "HM"
);

draw_set_font(fnt_item_stats_title);
draw_set_colour(c_red);
draw_text(
    item_stats_menu_x1 + 420,
    item_stats_menu_y1 + 32,
    "[ " + scr_get_item_type_string(global.shop_type_index) + " ]"
);

draw_set_font(fnt_item_stats_title);
draw_set_colour(scr_get_item_rarity_colour(global.shop_item_index));
draw_text(
    item_stats_menu_x1 + 420,
    item_stats_menu_y1 + 72,
    "[ " + scr_get_item_rarity_string(global.shop_item_index) + " ]"
);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ausprobieren
draw_set_alpha(1);
draw_set_colour(c_white);
draw_set_font(fnt_inv_stats);

draw_text_ext(
    shop_button_dropitem_x + 24 + 32,
    shop_button_dropitem_y - 24,
    "Hier kannst du freischaltbare Items im HUB ausprobieren.##Press the Button!",
    16,
    300
);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
