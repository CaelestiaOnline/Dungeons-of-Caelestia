<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>obj_mana_item_ability</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stats
index = items.mana_teleport_orb;
mana = item_stats[index, item_stats_mag.mana_usage];
scr_init_ability(item_stats[index, item_stats_mag.ability], item_stats[index, item_stats_mag.ability_strength]);
real_distance = 0;

confirmed = false;

hit_list = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Angriff
if(!admin.playing) exit;

scr_mag_ability();

real_distance = 0;
with(obj_player) {
    for(var i = 0; i &lt; other.max_distance; i++) {
        if(place_meeting(obj_player.x + ((i + 1) * obj_player.image_xscale), obj_player.y, obj_hindernis)) {
            other.real_distance = i * obj_player.image_xscale;
            break;
        } else other.real_distance = other.max_distance * obj_player.image_xscale;
    }
}

if(confirmed &amp;&amp; abs(real_distance) &gt; min_distance) {
    alarm_set(1, stun_time);
    scr_keylock_mag_ability(true);
    obj_player.move_x = 0;
    obj_player.move_y = 0;
    confirmed = false;
    
    var ability_hitmark = instance_create(obj_player.x, obj_player.y, obj_ability_hitmark);
    ability_hitmark.sprite_index = spr_hub_portal_blue;
    ability_hitmark.alarm[0] = stun_time*2;
    ability_hitmark.depth = 200;
    
    var ability_hitmark = instance_create(obj_player.x + real_distance, obj_player.y, obj_ability_hitmark);
    ability_hitmark.sprite_index = spr_hub_portal_orange;
    ability_hitmark.alarm[0] = stun_time*2;
    ability_hitmark.depth = 200;
    
}

if(alarm_get(1) == stun_time/2) {
    obj_player.x += real_distance;
}
if(alarm_get(1) == -1) {
    scr_keylock_mag_ability(false);
    alarm_set(1, -2);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Position
if(!admin.playing) exit;
if(alarm_get(1) != -2) exit;

draw_set_alpha(0.5);
if(abs(real_distance) &gt; min_distance) {
    draw_set_colour(c_green);
} else draw_set_colour(c_red);
var new_x = obj_player.x + real_distance;
draw_ellipse(new_x - 20, obj_player.y - 12, new_x + 20, obj_player.y + 12, 0);

draw_set_colour(c_black);
draw_ellipse(new_x - 5, obj_player.y - 3, new_x + 5, obj_player.y + 3, 0);
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
