<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_menu_arrow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Menü-Array + Rest

//Anzahl der Auswahlmöglichkeiten
menulength = 5;

//Pixel in y-Richtung zwischen den Auswahlmöglichkeiten
yspace = 80;

//Abstand zwischen Pfeil und Mitte der View[0] in Pixel in - x-Richtung 
xspace = 50;

//Aktuelle Position des Menüpfeils
menupos  = 0;

//Überschrift
heading = "Dungeons of Cælestia";
false_heading = choose("Denguins if Caewlrstia", "Dugnoens off Caestiala");

false_spelling_mode = false;

if(scr_crit_attack(0.01)) false_spelling_mode = true;

if(false_spelling_mode) heading = false_heading;

//Auswahlmöglichkeiten
menu[0] = "Start Game";
menu[1] = "Buy DLCs";
menu[2] = "Multiplayer";
menu[3] = "Options";
menu[4] = "Return to Earth";

if(false_spelling_mode) {
menu[0] = choose("stat gaim", "stard gem", "emaG tratS");
menu[1] = choose("Ubgrait 2 Braymium", "i need ze moneys pls", "Bui DCLs");
menu[2] = choose("Maltiplaiar", "Pley width otters");
menu[3] = choose("Optshens", "Eynsdelungs");
menu[4] = choose("Ridoern 2 Erth", "bb");
}

draw_set_font(fnt_main_menu);

wtext = max(
    string_width(menu[0]),
    string_width(menu[1]),
    string_width(menu[2]),
    string_width(menu[3]),
    string_width(menu[4]),
    );
    
//Farben der Auswahlmöglichkeiten
colour[0] = c_white;
colour[1] = c_white;
colour[2] = c_white;
colour[3] = c_white;
colour[4] = c_white;

//Schatten
shadow = 3;

//Farbe
menucolour = scr_get_random_colour();

//Planet
planet = instance_create(view_wview[0]/8, view_hview[0]*0.6, obj_planet);

//Bewegter Hintergrund
background_hspeed[0] = choose(random(3)* -1, random(3));
background_vspeed[0] = choose(random(3)* -1, random(3));
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Splash-Screen
splash_screen_file_length = 68;
splash_screen_index = irandom(splash_screen_file_length -1);

splash_screen_file = file_text_open_read(working_directory + "Textdateien\" + "splash_screen.txt");

var n;
for(n = 0; n &lt;= splash_screen_index; n++) {
    splash_screen = file_text_read_string(splash_screen_file);
    file_text_readln(splash_screen_file);

}

file_text_close(splash_screen_file);

if(false_spelling_mode) splash_screen = "False Spelling Edition";
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///alarm0
alarm_set(0, room_speed);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Splash-Alpha
splash_alpha = 1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move
move = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Music
main_menu_music = audio_play_sound(snd_music_main_menu, 10, true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Tasteneingaben bzw. menupos
move = 0;

move -= max(keyboard_check_pressed(vk_up), keyboard_check_pressed(ord("W")), 0);
move += max(keyboard_check_pressed(vk_down), keyboard_check_pressed(ord("S")), 0);

if(move != 0) {
    menupos += move;
    audio_play_sound(snd_click, 0, false);
    if(menupos &lt; 0) menupos = menulength - 1;
    if(menupos &gt; menulength - 1) menupos = 0;
    alarm_set(1, room_speed/4);
}

if(!keyboard_check_pressed(vk_up) &amp;&amp; !keyboard_check_pressed(ord("W"))) move -= max(keyboard_check(vk_up), keyboard_check(ord("W")), 0);
if(!keyboard_check_pressed(vk_down) &amp;&amp; !keyboard_check_pressed(ord("S"))) move += max(keyboard_check(vk_down), keyboard_check(ord("S")), 0);

if(move != 0) {
    if(alarm_get(1) == -1) alarm_set(1, room_speed/4);
    if(alarm_get(1) == 0) {
    menupos += move;
    audio_play_sound(snd_click, 0, false);
    if(menupos &lt; 0) menupos = menulength - 1;
    if(menupos &gt; menulength - 1) menupos = 0;
    }
}

var push;
push = max(keyboard_check_pressed(vk_enter), keyboard_check_pressed(vk_space), 0);
if(push == 1) {
    scr_main_menu();
    audio_play_sound(snd_click, 0, false);
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///alarm0
if(alarm_get(0) == -1) alarm_set(0, room_speed);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Splash-Alpha
if(alarm_get(0) &gt; room_speed/2) splash_alpha -=  0.04;
if(alarm_get(0) &lt; room_speed/2) splash_alpha +=  0.04;

if(splash_alpha &gt; 1) splash_alpha = 1;
if(splash_alpha &lt; 0) splash_alpha = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Music
audio_stop_sound(main_menu_music);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Zeichne Auswahlmöglichkeiten + Titel
draw_set_colour(c_white);

//Überschrift
draw_set_alpha(1);
draw_set_font(fnt_main_menu_heading);
draw_set_halign(fa_center);
draw_text(view_wview[0]/2, view_hview[0]/8 - 60, heading);

//Schatten
draw_set_alpha(0.5);
draw_set_colour(c_white);
draw_text(view_wview[0]/2 + shadow*2, view_hview[0]/8 - 60 + shadow*2, heading);

//Schatten2
draw_set_alpha(0.3);
draw_set_colour(c_white);
draw_text(view_wview[0]/2 + shadow*4, view_hview[0]/8 - 60 + shadow*4, heading);

//Schatten3
draw_set_alpha(0.1);
draw_set_colour(c_white);
draw_text(view_wview[0]/2 + shadow*6, view_hview[0]/8 - 60 + shadow*6, heading);

//Cael-Orb
draw_set_alpha(1);
draw_sprite(
    spr_cael_orb,
    0,
    view_wview[0]/2 - string_width(heading)/2 - 50,
    view_hview[0]/8,
);

//Auswahlmöglichkeiten
draw_set_alpha(1);
draw_set_font(fnt_main_menu);
draw_set_halign(fa_left);
colour[menupos] = menucolour;

var m;
for(m = 0; m &lt; array_length_1d(menu); m++) {
    draw_set_colour(colour[m]);
    draw_set_alpha(1);
    draw_text(
        view_wview[0]/2 - wtext/2,
        view_hview[0]/2 - 100 + (m * yspace),
        menu[m],
        );
//Schatten
    draw_set_alpha(0.5);
    draw_text(
        view_wview[0]/2 - wtext/2 + shadow,
        view_hview[0]/2 - 100 + (m * yspace) + shadow,
        menu[m],
        );
        colour[m] = c_white;
}

draw_set_colour(c_white);
/*
//Pfeil
draw_sprite(
    sprite_index,
    0,
    ((view_wview[0]/2) - wtext/2 - xspace),
    ((view_hview[0]/2) - 100 + sprite_get_height(sprite_index)/2) + (menupos * yspace)
    );
    
//Schatten des Pfeils
draw_sprite(
    sprite_index,
    0,
    ((view_wview[0]/2) - wtext/2 - xspace + shadow/2),
    ((view_hview[0]/2) - 100 + sprite_get_height(sprite_index)/2) + (menupos * yspace) + shadow/2
    );
*/
//Linie
draw_set_font(fnt_main_menu);
var yvalue = (view_hview[0]/2) - 100 + string_height(menu[menupos]) + (menupos * yspace);
draw_line_width_colour(
    (view_wview[0]/2) - wtext/2,
    yvalue,
    (view_wview[0]/2) - wtext/2 + string_width(menu[menupos]),
    yvalue,
    8,
    c_white,
    c_white
    );
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Splash-Screen-Text
draw_set_font(fnt_pixel3);
draw_set_alpha(splash_alpha);
draw_text(
    view_wview[0] - max(string_width(splash_screen) + 20, 800),
    view_hview[0]/8 + 100,
    splash_screen
);

//Schatten
draw_set_alpha(splash_alpha/2);
draw_text(
    view_wview[0] - max(string_width(splash_screen) + 20, 800) + 3,
    view_hview[0]/8 + 100 + 3,
    splash_screen
);
draw_set_alpha(1);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
