<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Gehe ins Hub
obj_player.visible = false;
alarm_set(0, -2);
scr_keylock_all(true);
confirmed_dead = false;
confirmed_revive = false;
confirmed_google = false;
player_stats.invincible = true;
with(obj_gegner) {
    freeze = true;
}

scr_invfade(true, "");

draw_alarm0 = false;

//Erhöhe Stats
stats.death_count += 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Revive
obj_player.visible = true;
player_stats.invincible = false;
admin.playing = true;
scr_reset_player_stats();
scr_effect_kill_all();
scr_invfade(false, "");
scr_keylock_all(false);
with(obj_gegner) {
    freeze = false;
}
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!admin.in_game) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Bestätigung Dead
if(keyboard_check_pressed(ord("K"))) {
    confirmed_dead = true;
}

if(confirmed_dead) {
    room_goto(rm_main_hub);
    obj_player.visible = true;
    player_stats.invincible = false;
    scr_reset_player_stats();
    hub.in_hub = true;
    scr_effect_kill_all();
    if(admin.in_run) scr_leave_run(true);
    scr_room_placer(rm_main_hub);
    if(room == rm_main_hub) {
        scr_enter_hub_menu(rm_hub_death_menu);
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Bestätigung Revive
if(keyboard_check_pressed(ord("J")) &amp;&amp; player_stats.revive &amp;&amp; !draw_alarm0) {
    confirmed_revive = true;
    player_stats.revive = false;
    scr_inventory_rem_item(inventory.inv_items, items.revive_orb, 1);
}

if(confirmed_revive) {
    alarm_set(0, room_speed*3);
    confirmed_revive = false;
    draw_alarm0 = true;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Bestätigung Google
if(keyboard_check_pressed(ord("L"))) {
    confirmed_google = true;
}

if(confirmed_google) {
    url_open_ext( 'https://www.google.de/search?q=how+to+git+gud', '_blank');
    confirmed_google = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Window
//BG1
draw_set_colour(global.co_blue_gray_1000);
draw_set_alpha(0.8);

var x1, y2, x2, y2, buffer1;
buffer1 = 100;
x1 = buffer1;
x2 = display_get_gui_width() - buffer1;

y1 = buffer1;
y2 = display_get_gui_height()- buffer1;

draw_roundrect(x1, y1, x2, y2, 0);

//BG2
draw_set_colour(global.co_blue_gray_900);
draw_set_alpha(0.8);

var x1, y2, x2, y2, buffer1;
buffer1 = 120;
x1 = buffer1;
x2 = display_get_gui_width() - buffer1;

y1 = buffer1;
y2 = display_get_gui_height()- buffer1;

draw_roundrect(x1, y1, x2, y2, 0);
draw_set_alpha(1);




</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Heading

draw_set_alpha(1);
draw_set_colour(choose(c_white, c_red, c_black));
draw_set_halign(fa_center);
draw_set_font(fnt_death_screen_heading);

draw_text(display_get_gui_width()/2, 180, "MALFUNCTION");

draw_set_colour(c_white);
draw_set_font(fnt_death_screen_heading2);

draw_text(display_get_gui_width()/2, 280, "Drone is not responding");

draw_set_halign(fa_left);

draw_set_font(fnt_death_screen_normal);

var text = "Data will be synchronized to local server...";
draw_text(500, 500, text);

var text = "Uploading Data...";
draw_text(500, 530, text);

var text = "PRESS 'K' to finish upload";
draw_text(300, 700, text);

var text = "Drone will be destroyed.";
draw_text(1000, 700, text);

var text = "PRESS 'J' to run Windows Problembehandlung";
draw_text(300, 800, text);

var text = "Drone will be repaired, if possible.";
draw_text(1000, 800, text);

var repair_status;
if(player_stats.revive) {
    repair_status = "possible";
    draw_set_colour(c_green);
}
else {
    repair_status = "not possible";
    draw_set_colour(c_red);
}

var text = "STATUS: " + repair_status;
draw_text(1000, 830, text);
draw_set_colour(c_white);

var text = "PRESS 'L' to google Error";
draw_text(300, 900, text);


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Alarms

if(draw_alarm0) {
    draw_set_colour(c_red);
    draw_set_font(fnt_death_screen_heading2);
    draw_set_halign(fa_center);

    draw_text(display_get_gui_width()/2, 400, "Revive in " + string(round(alarm_get(0)/room_speed)) + "s");
    draw_set_halign(fa_left);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
