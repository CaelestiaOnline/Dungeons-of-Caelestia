<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Koordinaten
//Hintergrund
hud_bg_x1 = 16;
hud_bg_x2 = 250;
hud_bg_y1 = display_get_gui_height() - 150 - 16;
hud_bg_y2 = display_get_gui_height() - 16;

//Bars
health_bar_y = hud_bg_y1 + 16;
mana_bar_y = health_bar_y + 32; 
stamina_bar_y = mana_bar_y + 32;

bar_buffer = 16;
bar_x = hud_bg_x1 + bar_buffer;

width = hud_bg_x2 - hud_bg_x1 - bar_buffer - bar_buffer;
height = 24;

buffer = 2;

//Dealt-damage
dealt_damage_scale = 0;
old_hp = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//damage
/*
if(dealt_damage &gt; 0) {
    if(damage_count &gt; 10) {
        if(old_dealt_damage == dealt_damage) {
            
            dealt_damage = 0;
        }
        damage_count = 0;
    }
    damage_count++;
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///exit
if(!admin.playing) exit;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hintergrund
draw_set_colour(inv_hud.colour_trans);
draw_set_alpha(inv_hud.alpha_bbg);

draw_rectangle(
    hud_bg_x1,
    hud_bg_y1,
    hud_bg_x2,
    hud_bg_y2,
    0
    );
draw_set_alpha(1);
draw_set_colour(c_white);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ãœberschrift
draw_set_colour(inv_hud.colour_heading);
draw_set_valign(fa_middle);
draw_rectangle(
    hud_bg_x1,
    hud_bg_y1 - 8 - 32,
    hud_bg_x2,
    hud_bg_y1 - 8,
    0
);

draw_set_colour(inv_hud.colour_font);
draw_set_font(fnt_inv_heading);
draw_text(
    hud_bg_x1 + 8,
    hud_bg_y1 - 8 - 16,
    "HUD"
);
draw_set_valign(fa_top);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///HP des Charakters
//Health-Bar
var health_scale;
health_scale = player_stats.hp / player_stats.max_hp;
if(health_scale &lt; 0) health_scale = 0;

//Hintergrund
draw_set_colour(inv_hud.colour_trans);
draw_set_alpha(inv_hud.alpha_bbg);
draw_rectangle(bar_x, health_bar_y, bar_x + width, health_bar_y + height, 0);
draw_set_alpha(1);

//Dealt-Damage Bar
draw_set_colour(c_yellow);
draw_set_alpha(1);
draw_rectangle(bar_x + buffer, health_bar_y + buffer, bar_x + ((width - buffer) * health_scale), health_bar_y + height - buffer, 0);

//Bar
draw_set_colour(c_red);
draw_set_alpha(1);
draw_rectangle(bar_x + buffer, health_bar_y + buffer, bar_x + ((width - buffer) * health_scale), health_bar_y + height - buffer, 0);

//Health-Text
draw_set_font(fnt_hud);
draw_set_halign(fa_left);
draw_set_valign(fa_middle);
draw_set_alpha(1);
draw_set_colour(c_white);
draw_text(
    bar_x + 10,
    (health_bar_y + (health_bar_y+height))/2 - buffer,
    string(int64(player_stats.hp))
    );
    
draw_text(
    bar_x + width - string_width(string(player_stats.max_hp)) - 10,
    (health_bar_y + (health_bar_y+height))/2 - buffer,
    string(player_stats.max_hp)
    );
    
draw_set_valign(fa_top);
    





/*
if(obj_player.dealt_damage &gt; 0) {

dealt_damage_scale = obj_player.dealt_damage/100;

} else dealt_damage_scale = 0;
draw_sprite_ext(
    spr_health_bar_damage,
    0,
    25 + old_hp,
    health_bar_y,
    dealt_damage_scale,
    1,
    0,
    c_white,
    1
    );
dealt_damage_scale -= 0.2;
dealt_damage_scale = clamp(dealt_damage_scale, 0, player_stats.max_hp);
*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mana des Charakters
//Mana-Bar
var mana_scale;
mana_scale = player_stats.mana / player_stats.max_mana;
if(mana_scale &lt; 0) mana_scale = 0;

//Hintergrund
draw_set_colour(inv_hud.colour_trans);
draw_set_alpha(inv_hud.alpha_bbg);
draw_rectangle(bar_x, mana_bar_y, bar_x + width, mana_bar_y + height, 0);
draw_set_alpha(1);

//Bar
draw_set_colour(c_aqua);
draw_set_alpha(1);
draw_rectangle(bar_x + buffer, mana_bar_y + buffer, bar_x + ((width - buffer) * mana_scale), mana_bar_y + height - buffer, 0);

//Health-Text
draw_set_font(fnt_hud);
draw_set_halign(fa_left);
draw_set_valign(fa_middle);
draw_set_alpha(1);
draw_set_colour(c_white);
draw_text(
    bar_x + 10,
    (mana_bar_y + (mana_bar_y+height))/2 - buffer,
    string(int64(player_stats.mana))
    );
    
draw_text(
    bar_x + width - string_width(string(player_stats.max_mana)) - 10,
    (mana_bar_y + (mana_bar_y+height))/2 - buffer,
    string(player_stats.max_mana)
    );
    
draw_set_valign(fa_top);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stamina des Charakters
//Stamina-Bar
var stamina_scale;
stamina_scale = player_stats.stamina / player_stats.max_stamina;
if(stamina_scale &lt; 0) stamina_scale = 0;

//Hintergrund
draw_set_colour(inv_hud.colour_trans);
draw_set_alpha(inv_hud.alpha_bbg);
draw_rectangle(bar_x, stamina_bar_y, bar_x + width, stamina_bar_y + height, 0);
draw_set_alpha(1);

//Bar
draw_set_colour(c_blue);
draw_set_alpha(1);
draw_rectangle(bar_x + buffer, stamina_bar_y + buffer, bar_x + ((width - buffer) * stamina_scale), stamina_bar_y + height - buffer, 0);

//Health-Text
draw_set_font(fnt_hud);
draw_set_halign(fa_left);
draw_set_valign(fa_middle);
draw_set_alpha(1);
draw_set_colour(c_white);
draw_text(
    bar_x + 10,
    (stamina_bar_y + (stamina_bar_y+height))/2 - buffer,
    string(int64(player_stats.stamina))
    );
    
draw_text(
    bar_x + width - string_width(string(player_stats.max_stamina)) - 10,
    (stamina_bar_y + (stamina_bar_y+height))/2 - buffer,
    string(player_stats.max_stamina)
    );
    
draw_set_valign(fa_top);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
